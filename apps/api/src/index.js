import 'dotenv/config';
import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import compression from 'compression';
import morgan from 'morgan';
import { makeAuth } from './middleware/auth.js';
import health from './routes/health.js';
import deals from './routes/deals.js';
import adminRoutes from './routes/admin.js';
import authRoutes from './routes/auth.js';
import usersRoutes from './routes/users.js';
import categoriesRoutes from './routes/categories.js';
import couponsRoutes from './routes/coupons.js';
import companiesRoutes from './routes/companies.js';
import tagsRoutes from './routes/tags.js';
import savedSearchesRoutes from './routes/savedSearches.js';
import reviewsRoutes from './routes/reviews.js';
import savedItemsRoutes from './routes/savedItems.js';
import personalizationRoutes from './routes/personalization.js';
import autoTaggingRoutes from './routes/autoTagging.js';
import gamificationRoutes from './routes/gamification.js';
import navbarRoutes from './routes/navbar.js';
import statsRoutes from './routes/stats.js';
import analyticsRoutes from './routes/analytics.js';
import goRoutes from './routes/go.js';
import tempDataRoutes from './routes/temp-data.js';
import debugRoutes from './routes/debug.js';
import { log } from './lib/logger.js';

const app = express();
app.use(helmet({ crossOriginResourcePolicy: false }));
app.use(cors({ origin: true, credentials: true }));
app.use(compression());
app.use(morgan('tiny'));
app.use(express.json());
app.use(makeAuth());

app.use(health);
app.use('/api/auth', authRoutes);
app.use('/api/users', usersRoutes);
app.use('/api/categories', categoriesRoutes);
app.use('/api/coupons', couponsRoutes);
app.use('/api/companies', companiesRoutes);
app.use('/api/tags', tagsRoutes);
app.use('/api/saved-searches', savedSearchesRoutes);
app.use('/api/reviews', makeAuth(), reviewsRoutes);
app.use('/api/saved-items', savedItemsRoutes);
app.use('/api/personalization', makeAuth(), personalizationRoutes);
app.use('/api/auto-tagging', autoTaggingRoutes);
app.use('/api/gamification', gamificationRoutes);
app.use('/api/navbar', navbarRoutes);
app.use('/api/stats', statsRoutes);
app.use('/api/analytics', analyticsRoutes);
app.use('/api/deals', makeAuth(), deals);
app.use('/api/admin', adminRoutes);
app.use('/api', tempDataRoutes);
app.use('/api', debugRoutes); // Debug routes
app.use(goRoutes);

const PORT = Number(process.env.PORT || 4000);
app.listen(PORT, () => log(`API listening on http://localhost:${PORT}`));
