import React, { useState, useRef, useEffect } from 'react'
import { Link, useNavigate, useLocation } from 'react-router-dom'
import { useQuery } from '@tanstack/react-query'
import { api, apiRequest } from '../../lib/api'
import { useAuth } from '../../hooks/useAuth'
import { useLocation as useUserLocation } from '../../context/LocationContext'
import * as NavigationMenu from '@radix-ui/react-navigation-menu'
import * as DropdownMenu from '@radix-ui/react-dropdown-menu'
import * as Dialog from '@radix-ui/react-dialog'
import * as Avatar from '@radix-ui/react-avatar'
import * as Separator from '@radix-ui/react-separator'
import { Slot } from '@radix-ui/react-slot'
import { cva } from 'class-variance-authority'
import { 
  ChevronDownIcon, 
  Bars3Icon, 
  XMarkIcon, 
  SparklesIcon,
  UserGroupIcon,
  Cog6ToothIcon,
  BookmarkIcon,
  BellIcon,
  ShoppingBagIcon,
  StarIcon,
  PlusIcon,
  TagIcon,
  UserIcon,
  TrophyIcon,
  ChartBarIcon,
  CogIcon,
  ArrowRightOnRectangleIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  EyeIcon,
  HeartIcon,
  ClockIcon,
  BoltIcon,
  HomeIcon,
  GiftIcon,
  BuildingOfficeIcon,
  MapPinIcon
} from '@heroicons/react/24/outline'
import { 
  FireIcon, 
  ChatBubbleLeftRightIcon
} from '@heroicons/react/24/solid'
import NotificationBell from '../User/NotificationBell'
import UnifiedSearch from '../Search/UnifiedSearch.jsx'
import AdvancedSearchInterface from '../Search/AdvancedSearchInterface'

// Utility function for class variants
const cn = (...classes) => classes.filter(Boolean).join(' ')

// Button variants
const buttonVariants = cva(
  "inline-flex items-center justify-center rounded-lg text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background",
  {
    variants: {
      variant: {
        default: "bg-primary-600 text-white hover:bg-primary-700",
        secondary: "bg-secondary-100 text-secondary-900 hover:bg-secondary-200",
        ghost: "hover:bg-secondary-100 hover:text-secondary-900",
        outline: "border border-secondary-300 bg-transparent hover:bg-secondary-100",
        gradient: "bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white shadow-sm hover:shadow-md"
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-8 px-3 text-xs",
        lg: "h-12 px-6 text-base",
        icon: "h-10 w-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
)

const Navbar = () => {
  const { user, signOut } = useAuth()
  const navigate = useNavigate()
  const location = useLocation()
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const { location: userLocation } = useUserLocation?.() || {}

  // Get categories for dropdown
  const { data: categories } = useQuery({
    queryKey: ['categories'],
    queryFn: () => api.getCategories(),
    staleTime: 5 * 60 * 1000
  })

  // Get navbar stats (users online, deals today, coupons today)
  const { data: navbarStats, error: statsError } = useQuery({
    queryKey: ['navbar-stats'],
    queryFn: () => api.getNavbarStats(),
    refetchInterval: 30000, // Refetch every 30 seconds
    staleTime: 15000, // Consider data stale after 15 seconds
    retry: 2
  })

  // Get user profile data for enhanced display
  const { data: userProfile } = useQuery({
    queryKey: ['user-profile', user?.id],
    queryFn: () => api.getUser(user?.user_metadata?.handle || user?.id),
    enabled: !!user?.id,
    staleTime: 5 * 60 * 1000 // 5 minutes
  })

  // Track user session (heartbeat)
  useEffect(() => {
    if (user) {
      // Track initial session
      api.trackUserSession(location.pathname).catch(console.error)
      
      // Set up heartbeat interval
      const heartbeatInterval = setInterval(() => {
        api.trackUserSession(location.pathname).catch(console.error)
      }, 60000) // Every minute

      return () => clearInterval(heartbeatInterval)
    }
  }, [user, location.pathname])

  // Get current pathname for active state
  const currentPath = location.pathname

  const handleSignOut = () => {
    signOut()
    setIsMenuOpen(false)
    navigate('/')
  }


  return (
    <>
      <header className="sticky top-0 z-50 w-full border-b border-primary-200/60 bg-gradient-to-r from-primary-50/95 to-primary-100/95 backdrop-blur-md supports-[backdrop-filter]:bg-gradient-to-r supports-[backdrop-filter]:from-primary-50/80 supports-[backdrop-filter]:to-primary-100/80 shadow-lg">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex h-16 items-center justify-between gap-4">
          
          {/* Logo */}
          <div className="flex items-center flex-shrink-0">
            <Link to="/" className="flex items-center group">
              <img 
                src="/logo.png" 
                alt="SaveBucks Logo" 
                className="h-20 w-20 object-contain group-hover:scale-105 transition-transform duration-200"
              />
            </Link>
          </div>

           {/* Desktop Navigation - Simplified */}
           <div className="hidden lg:flex lg:items-center lg:flex-1 lg:justify-center">
             <nav className="flex items-center space-x-1">
               {/* Home Link */}
               <Link
                 to="/"
                 className="flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium text-secondary-700 transition-colors hover:bg-secondary-100 hover:text-primary-600"
               >
                 <HomeIcon className="h-4 w-4" />
                 <span>Home</span>
               </Link>

               {/* Community Link */}
               <Link
                 to="/forums"
                 className="flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium text-secondary-700 transition-colors hover:bg-secondary-100 hover:text-primary-600"
               >
                 <UserGroupIcon className="h-4 w-4" />
                 <span>Community</span>
               </Link>

               {/* Saved Items Link */}
               <Link
                 to="/saved-items"
                 className="flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium text-secondary-700 transition-colors hover:bg-secondary-100 hover:text-primary-600"
               >
                 <BookmarkIcon className="h-4 w-4" />
                 <span>Saved</span>
               </Link>
             </nav>
           </div>

            {/* Right Side Actions */}
            <div className="flex items-center space-x-2 flex-shrink-0">
              {/* Location Display */}
              {userLocation?.address?.display && (
                <div className="hidden lg:flex items-center space-x-1.5 px-2 py-1 bg-emerald-50 border border-emerald-200 rounded-lg text-xs">
                  <MapPinIcon className="w-3 h-3 text-emerald-600" />
                  <span className="text-emerald-700 font-medium truncate max-w-24">
                    {userLocation.address.display}
                  </span>
                </div>
              )}
              
              {/* Post Deal Button */}
              <Link
                to="/post"
                className="hidden lg:inline-flex items-center space-x-2 bg-gradient-to-r from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700 text-white px-3 py-2 rounded-lg font-medium transition-all duration-200 shadow-sm hover:shadow-md text-sm"
              >
                <PlusIcon className="h-4 w-4" />
                <span className="hidden xl:inline">Post Deal/Coupon</span>
                <span className="xl:hidden">Post</span>
              </Link>

              {/* Notification Bell */}
              {user && (
                <div className="flex-shrink-0">
                  <NotificationBell />
                </div>
              )}

              {/* User Menu */}
              {user ? (
              <DropdownMenu.Root>
                <DropdownMenu.Trigger asChild>
                  <button className="flex h-9 w-9 items-center justify-center rounded-full border border-secondary-200 bg-white hover:bg-secondary-50 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors">
                    <Avatar.Root className="flex h-7 w-7 select-none items-center justify-center overflow-hidden rounded-full bg-gradient-to-br from-primary-500 to-primary-600">
                      {user.user_metadata?.avatar_url ? (
                        <Avatar.Image
                          className="h-full w-full object-cover"
                          src={user.user_metadata.avatar_url}
                          alt={user.user_metadata?.full_name || user.email}
                        />
                      ) : (
                        <Avatar.Fallback className="flex h-full w-full items-center justify-center rounded-full bg-primary-600 text-xs font-medium text-white">
                          {user.user_metadata?.full_name?.[0] || user.email?.[0]?.toUpperCase() || 'U'}
                        </Avatar.Fallback>
                      )}
                    </Avatar.Root>
                  </button>
                </DropdownMenu.Trigger>
                <DropdownMenu.Portal>
                  <DropdownMenu.Content
                    className="z-[60] min-w-[220px] overflow-hidden rounded-lg border border-secondary-200 bg-white p-1 text-secondary-900 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2"
                    sideOffset={5}
                  >
                    <div className="flex items-center justify-start gap-2 p-2">
                      <Avatar.Root className="flex h-8 w-8 select-none items-center justify-center overflow-hidden rounded-full bg-gradient-to-br from-primary-500 to-primary-600">
                        {userProfile?.avatar_url ? (
                          <Avatar.Image
                            className="h-full w-full object-cover"
                            src={userProfile.avatar_url}
                            alt={userProfile.display_name || userProfile.handle || user.email}
                          />
                        ) : (
                          <Avatar.Fallback className="flex h-full w-full items-center justify-center rounded-full bg-primary-600 text-xs font-medium text-white">
                            {(userProfile?.display_name || userProfile?.handle || user.email)?.[0]?.toUpperCase() || 'U'}
                          </Avatar.Fallback>
                        )}
                      </Avatar.Root>
                      <div className="flex flex-col space-y-1">
                        <p className="text-sm font-medium leading-none text-secondary-900">
                          {userProfile?.display_name || userProfile?.handle || user.user_metadata?.full_name || 'User'}
                        </p>
                        <p className="text-xs leading-none text-secondary-500">
                          {userProfile?.karma ? `${userProfile.karma} karma` : user.email}
                        </p>
                      </div>
                    </div>
                    <Separator.Root className="mx-1 h-px bg-secondary-200" />
                    
                    <DropdownMenu.Item asChild>
                      <Link
                        to={`/user/${userProfile?.handle || user?.user_metadata?.handle || user?.id}`}
                        className="relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-secondary-100 focus:text-secondary-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50"
                      >
                        <UserIcon className="mr-2 h-4 w-4" />
                        My Profile
                      </Link>
                    </DropdownMenu.Item>
                    
                    {/* Admin Panel Link - Only show for admin users */}
                    {userProfile?.role === 'admin' && (
                      <DropdownMenu.Item asChild>
                        <Link
                          to="/admin"
                          className="relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-secondary-100 focus:text-secondary-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50"
                        >
                          <Cog6ToothIcon className="mr-2 h-4 w-4" />
                          Admin Panel
                        </Link>
                      </DropdownMenu.Item>
                    )}
                    
                    <Separator.Root className="mx-1 h-px bg-secondary-200" />
                    
                    <DropdownMenu.Item
                        onClick={handleSignOut}
                      className="relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-secondary-100 focus:text-secondary-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50"
                      >
                      <ArrowRightOnRectangleIcon className="mr-2 h-4 w-4" />
                        Sign Out
                    </DropdownMenu.Item>
                  </DropdownMenu.Content>
                </DropdownMenu.Portal>
              </DropdownMenu.Root>
            ) : (
              <div className="flex items-center space-x-3">
                <Link
                  to="/signin"
                  className="flex items-center space-x-2 text-secondary-700 hover:text-primary-600 font-medium transition-colors px-3 py-2 rounded-lg hover:bg-secondary-100"
                >
                  <UserIcon className="h-5 w-5" />
                  <span>Log in/Sign Up</span>
                </Link>
              </div>
            )}
            </div>
          </div>

            {/* Mobile Menu Button */}
          <div className="flex lg:hidden flex-shrink-0">
            <Dialog.Root open={isMenuOpen} onOpenChange={setIsMenuOpen}>
              <Dialog.Trigger asChild>
                <button className="inline-flex items-center justify-center rounded-lg p-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors">
                  <Bars3Icon className="h-5 w-5" />
                  <span className="sr-only">Open menu</span>
                </button>
              </Dialog.Trigger>
              <Dialog.Portal>
                <Dialog.Overlay className="fixed inset-0 z-[70] bg-black/50 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0" />
                <Dialog.Content className="fixed left-0 top-0 z-[70] h-full w-3/4 max-w-sm border-r border-secondary-200 bg-white p-6 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left">
                  <div className="flex items-center justify-between">
                    <Dialog.Title className="text-lg font-semibold">Menu</Dialog.Title>
                    <Dialog.Close asChild>
                      <button className="rounded-lg p-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900 focus:outline-none focus:ring-2 focus:ring-primary-500/20">
                        <XMarkIcon className="h-6 w-6" />
                        <span className="sr-only">Close menu</span>
            </button>
                    </Dialog.Close>
        </div>

                  <div className="mt-6 space-y-4">
                    {/* Mobile search removed; use homepage search */}

                     {/* Mobile Navigation */}
                     <nav className="space-y-2">
                       <Link
                         to="/"
                         onClick={() => setIsMenuOpen(false)}
                         className="flex items-center space-x-2 rounded-lg px-3 py-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900"
                       >
                         <HomeIcon className="h-5 w-5" />
                         <span>Home</span>
                       </Link>

                       <Link
                         to="/forums"
                         onClick={() => setIsMenuOpen(false)}
                         className="flex items-center space-x-2 rounded-lg px-3 py-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900"
                       >
                         <UserGroupIcon className="h-5 w-5" />
                         <span>Community</span>
                       </Link>

                       <Link
                         to="/saved-items"
                         onClick={() => setIsMenuOpen(false)}
                         className="flex items-center space-x-2 rounded-lg px-3 py-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900"
                       >
                         <BookmarkIcon className="h-5 w-5" />
                         <span>Saved Items</span>
                       </Link>
                     </nav>

                                         {/* Mobile Post Deal Button */}
                     <Link
                       to="/post"
                       onClick={() => setIsMenuOpen(false)}
                       className="w-full inline-flex items-center justify-center space-x-2 bg-gradient-to-r from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700 text-white px-5 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl"
                     >
                       <PlusIcon className="h-5 w-5" />
                       <span>Post Deal/Coupon</span>
                     </Link>

                    {/* Mobile User Menu */}
                    {user ? (
                        <div className="space-y-2">
                        <Separator.Root className="h-px bg-secondary-200" />
                        <div className="flex items-center space-x-3 px-3 py-2">
                          <Avatar.Root className="flex h-8 w-8 select-none items-center justify-center overflow-hidden rounded-full bg-gradient-to-br from-primary-500 to-primary-600">
                            {userProfile?.avatar_url ? (
                              <Avatar.Image
                                className="h-full w-full object-cover"
                                src={userProfile.avatar_url}
                                alt={userProfile.display_name || userProfile.handle || user.email}
                              />
                            ) : (
                              <Avatar.Fallback className="flex h-full w-full items-center justify-center rounded-full bg-primary-600 text-xs font-medium text-white">
                                {(userProfile?.display_name || userProfile?.handle || user.email)?.[0]?.toUpperCase() || 'U'}
                              </Avatar.Fallback>
                            )}
                          </Avatar.Root>
                          <div>
                            <p className="text-sm font-medium text-secondary-900">
                              {userProfile?.display_name || userProfile?.handle || user.user_metadata?.full_name || 'User'}
                            </p>
                            <p className="text-xs text-secondary-500">
                              {userProfile?.karma ? `${userProfile.karma} karma` : user.email}
                            </p>
                          </div>
                        </div>
                        
                        <Link
                          to={`/user/${userProfile?.handle || user?.user_metadata?.handle || user?.id}`}
                          onClick={() => setIsMenuOpen(false)}
                          className="flex items-center space-x-2 rounded-lg px-3 py-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900"
                        >
                          <UserIcon className="h-5 w-5" />
                          <span>My Profile</span>
                        </Link>
                        
                        {/* Admin Panel Link - Only show for admin users */}
                        {userProfile?.role === 'admin' && (
                          <Link
                            to="/admin"
                            onClick={() => setIsMenuOpen(false)}
                            className="flex items-center space-x-2 rounded-lg px-3 py-2 text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900"
                          >
                            <Cog6ToothIcon className="h-5 w-5" />
                            <span>Admin Panel</span>
                          </Link>
                        )}
                        
                        <Separator.Root className="h-px bg-secondary-200" />
                        
                        <button
                          onClick={handleSignOut}
                          className="flex w-full items-center space-x-2 rounded-lg px-3 py-2 text-left text-secondary-700 hover:bg-secondary-100 hover:text-secondary-900"
                        >
                          <ArrowRightOnRectangleIcon className="h-5 w-5" />
                          <span>Sign Out</span>
                        </button>
              </div>
                                                              ) : (
                       <div className="space-y-3">
              <Link
                           to="/signin"
                  onClick={() => setIsMenuOpen(false)}
                           className="w-full inline-flex items-center justify-center space-x-2 px-4 py-2.5 text-secondary-700 hover:text-primary-600 font-medium transition-colors rounded-lg hover:bg-secondary-100"
                >
                           <UserIcon className="h-5 w-5" />
                           <span>Log in/Sign Up</span>
                </Link>
              </div>
        )}
      </div>
                </Dialog.Content>
              </Dialog.Portal>
            </Dialog.Root>
          </div>
        </div>
      </div>
    </header>

    {/* Secondary Navbar - Search Bar & Stats */}
    <div className="bg-gradient-to-r from-primary-100/80 to-primary-200/80 border-b border-primary-300/60 backdrop-blur-sm">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center gap-6 py-3">
          {/* Search Bar */}
          <div className="flex-1 max-w-2xl">
            <AdvancedSearchInterface
              showFilters={false}
              showSuggestions={true}
              compact={true}
              placeholder="Search deals, coupons, stores..."
              className="drop-shadow-sm"
            />
          </div>

          {/* Stats - Right of Search */}
          <div className="hidden lg:flex items-center space-x-4 text-xs text-secondary-600 flex-shrink-0">
            <div className="flex items-center space-x-2 px-3 py-2 bg-white/60 rounded-lg border border-white/40 backdrop-blur-sm">
              <div className="w-2 h-2 rounded-full bg-green-500 animate-pulse"></div>
              <UserIcon className="w-4 h-4 text-blue-600" />
              <span className="font-semibold text-gray-900">{navbarStats?.stats?.usersOnline?.toLocaleString() || '...'}</span>
              <span className="text-gray-600">online</span>
            </div>
            
            <div className="flex items-center space-x-2 px-3 py-2 bg-white/60 rounded-lg border border-white/40 backdrop-blur-sm">
              <FireIcon className="w-4 h-4 text-orange-500" />
              <span className="font-semibold text-gray-900">{navbarStats?.stats?.dealsToday?.toLocaleString() || '...'}</span>
              <span className="text-gray-600">deals</span>
            </div>
            
            <div className="flex items-center space-x-2 px-3 py-2 bg-white/60 rounded-lg border border-white/40 backdrop-blur-sm">
              <TagIcon className="w-4 h-4 text-emerald-600" />
              <span className="font-semibold text-gray-900">{navbarStats?.stats?.couponsToday?.toLocaleString() || '...'}</span>
              <span className="text-gray-600">coupons</span>
            </div>
          </div>
        </div>
      </div>
    </div>
    </>
  )
}

export default Navbar
